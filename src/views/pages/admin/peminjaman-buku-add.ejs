<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>
        ADMIN
        <%= data.appName %>
    </title>
    <link href="/public/images/UNH.png" rel="icon"> 
    <script src="//unpkg.com/alpinejs" defer></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <%- include("../../components/header.ejs") %>
</head>

<body id="page-top" x-data="alpineInit()">
    <div id="wrapper">
        <%- include("../../components/ui/sidebar.ejs") %>

            <div id="content-wrapper" class="d-flex flex-column">
                <div id="content">
                    <%- include ("../../components/ui/nav.ejs", { user: data.user }) %>

                        <div class="container-fluid">

                            <!-- Page Heading -->
                            <h1 class="h3 mb-2 text-gray-800">Ubah Data Peminjaman Buku</h1>
                            <p class="mb-4">Ubah data peminjaman buku</p>

                            <!-- DataTales Example -->
                            <div class="card shadow mb-4 p-4">

                                <form @submit.prevent="submit">
                                    <div class="row">
                                        <div class="col-12 col-md-6">
                                            <div class="mb-3">
                                                <label for="id" class="form-label">ID Buku</label>
                                                <div class="d-flex gap-2">
                                                    <input type="text" x-model="data.id" class="form-control" id="id" placeholder="Masukkan ID buku...">
                                                    <button type="button" @click="cariBuku" class="btn btn-primary">Cari</button>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <div class="mb-3">
                                                <label for="book" class="form-label">Data Buku</label>
                                                <input type="text" x-model="data.book" class="form-control" id="book" placeholder="xxx" disabled>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12 col-md-6">
                                            <div class="mb-3">
                                                <label for="nim" class="form-label">Nomor Induk Mahasiswa</label>
                                                <input type="number" x-model="data.nim" class="form-control" id="nim" placeholder="xxxxxxxx">
                                            </div>
                                        </div>
                                        <div class="col-12 col-md-6">
                                            <div class="mb-3">
                                                <label for="status" class="form-label">Status Peminjaman</label>
                                                <select class="form-select" id="status" x-model="data.status" aria-label="Default select example">
                                                    <option value="pending">Pending</option>
                                                    <option value="dipinjam">Dipinjam</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12 col-md-6">
                                            <div class="mb-3">
                                                <label for="tanggal_peminjaman" class="form-label">Tanggal
                                                    Peminjaman</label>
                                                <input type="datetime-local" x-model="data.tanggal_peminjaman" class="form-control" id="tanggal_peminjaman" placeholder="Masukkan tanggal buku dipinjam">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-12">
                                            <button type="submit" class="btn btn-primary">Tambah</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                </div>
            </div>

            <a class="scroll-to-top rounded" href="#page-top">
                <i class="fas fa-angle-up"></i>
            </a>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
            <%- include("../../components/footer-js.ejs") %>

                <script>
                    function alpineInit() {
                        return {
                            data: {
                                isSearch: false,
                                book_id: '',
                                book: null,
                                nim: '',
                                status: 'pending',
                                tanggal_peminjaman: new Date(Date.now() + (7 * 60 + new Date().getTimezoneOffset()) * 60000 + 25200000).toISOString().slice(0, 16)
                            },
                            async cariBuku() {
                                try {
                                    if (!this.data.id) return Toastify({
                                        text: 'Masukkan id buku yang ingin dicari',
                                        duration: 1600,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: '#e74a3b',
                                        },
                                    }).showToast();
                                    const request = await fetch(`/books/${this.data.id}`, {
                                        method: 'GET',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                    });
                                    const response = await request.json();
                                    if (response.status === 200) {
                                        this.data.book_id = response.data.buku.id
                                        this.data.book = `${response.data.buku.judul} (${response.data.buku.tahun}) ${response.data.buku.penulis}`
                                        this.data.isSearch = true
                                    } else {
                                        this.data.isSearch = false
                                        return Toastify({
                                            text: 'Buku tidak ditemukan',
                                            duration: 1600,
                                            gravity: "bottom",
                                            position: "right",
                                            style: {
                                                background: '#e74a3b',
                                            },
                                        }).showToast();
                                    }
                                } catch (error) {
                                    Toastify({
                                        text: 'Terjadi kesalahan pada server, error: ' + error.message,
                                        duration: 1600,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: '#e74a3b',
                                        },
                                    }).showToast();
                                    return;
                                }
                            },
                            async submit() {
                                try {
                                    if (!this.data.isSearch) return Toastify({
                                        text: 'Buku harus dicari terlebih dahulu',
                                        duration: 1600,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: '#e74a3b',
                                        },
                                    }).showToast();
                                    const request = await fetch(`/admin/peminjaman-buku`, {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify(this.data)
                                    });
                                    const response = await request.json();
                                    Toastify({
                                        text: response.message,
                                        duration: 2000,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: response.status === 201 ? '#1cc88a' : '#e74a3b',
                                        },
                                    }).showToast();
                                    if (response.status === 201) setTimeout(() => window.location = '/admin/peminjaman-buku', 1500);
                                } catch (error) {
                                    Toastify({
                                        text: 'Terjadi kesalahan pada server, error: ' + error.message,
                                        duration: 1600,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: '#e74a3b',
                                        },
                                    }).showToast();
                                    return;
                                }
                            },
                            async logout() {
                                try {
                                    const request = await fetch('/logout', {
                                        method: 'POST',
                                        headers: {
                                            'Content-type': 'application/json'
                                        },
                                    })
                                    const response = await request.json()
                                    Toastify({
                                        text: response.message,
                                        duration: 2000,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: response.status === 200 ? '#1cc88a' : '#e74a3b',
                                        },
                                    }).showToast();
                                    if (response.status === 200) setTimeout(() => window.location.reload(), 1500)
                                } catch (error) {
                                    Toastify({
                                        text: 'Terjadi kesalahan pada server, error: ' + error.message,
                                        duration: 1600,
                                        gravity: "bottom",
                                        position: "right",
                                        style: {
                                            background: '#e74a3b',
                                        },
                                    }).showToast();
                                    return;
                                }
                            },
                        }
                    }
                </script>
</body>

</html>